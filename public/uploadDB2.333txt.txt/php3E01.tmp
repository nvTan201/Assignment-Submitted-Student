Tìm hiểu view trong sql(select không chạy được insert,update,delete)
quản lí nhà trên phố

Viết câu lệnh thực hiên quá trình hiển thj thông tin id, name,ngayDen,soNha,DuongPho
lấy dữ liệu từ nhiều bảng

where xác định khóa phụ
select NhaTrenPho.id,.... from NhaTrenPho,DuongPho,QuanHuyen
where NhaTrenPho.MaDP=DuongPho.MaDP(xác định khóa phụ)
and DuongPho.MaQH=QuanHuyen.MaQH

==>dùng để chia sẻ code với nhau.

VIEW :lưu lại các câu truy vấn là dùng để tái sử dụng(

bản chất chứa các câu lệnh truy vấn tạo bảng ảo để lưu cái câu select, chỉ chạy được một câu select)
--cách tạo view
create view xem_thong_tin_nha_tren_pho  as
select NhaTrenPho.id,.... from NhaTrenPho,DuongPho,QuanHuyen
where NhaTrenPho.MaDP=DuongPho.MaDP(xác định khóa phụ)
and DuongPho.MaQH=QuanHuyen.MaQH

--cách chạy view
select * from xem_thong_tin_nha_tren_pho

---Viết thêm điều iện cho view 
select * from xem_thong_tin_nha_tren_pho where tenQH='Hoang Mai'

--Sửa lại nội dung trong câu truy vấn select dung alter
alter view xem_thong_tin_nha_tren_pho
select * from xem_thong_tin_nha_tren_pho where tenQH='Hoang Mai'

---xóa view 
drop view xem_thong_tin_nha_tren_pho



STORE(PROCDUCE-FUNCTION)(CRUD)

-Function:
	+Tham số truyền vào
	+Dữ liệu trả về
	+code viết trong function
-Store :
	+Tham số truyền vào: rỗng, một hoặc nhiều tham số
	+Dữ liệu trả về
	+code viết trong storre:Query CRUD

*Store procduce :Bảo mật dữ liệu,ngắn gọn,che câu query không tham số truyền vào, không có dữ liệu trả về,chỉ có code không
create proc proc_test
as
begin 
	#chứa code
	select * from QuanHuyen
	select * from DuongPho
	select * from NhaTrenPho
	
end
--chạy proc=>gọi proc
	
	exec proc_test hoặc proc_test

--sửa nd
	alter proc proc_test
	as
	begin 
		#chứa code
		select * from QuanHuyen
		select * from DuongPho
		select * from NhaTrenPho
	end

--xóa 
	drop proc proc_test

*tạo store có tham số truyền vao

	create proc proc_test_tham_so
	@TenQh  varchar(30),
	@SoNha int
	as
	begin 
		#chứa code
		select NhaTrenPho.id,.... from NhaTrenPho,DuongPho,QuanHuyen
		where NhaTrenPho.MaDP=DuongPho.MaDP(xác định khóa phụ)
		and DuongPho.MaQH=QuanHuyen.MaQH
		and QuanHuyen.MaQH=@TenQH
		and NhaTrenPho.SoNha like CONCAT('%',@SoNha,'%')
	
	end

--xem kq
	exec proc_test_tham_so N'Hoang mai',N'18'


Transaction:(Giao dịch)
    - Insert, Update, Delete
    - Đảm bảo dữ liệu chạy chuẩn
    - Chuyển khoản:
        + Khi chuyển tiền thành công: bị trừ tiền
        + Khi chuyển tiền không thành công: được hoàn tiền 

CREATE TABLE Class(
	idClass INT PRIMARY KEY IDENTITY,
	nameClass char(8)
)

CREATE TABLE Student(
	idStudent INT PRIMARY KEY IDENTITY,
	nameStudent varchar(20),
	idClass INT FOREIGN KEY REFERENCES Class(idClass)
)


INSERT INTO Class VALUES ('BKD07K11'), ('BKD07K11'), ('BKD08K11')
INSERT INTO Student VALUES ('Nguyen Thi Thanh Lam', 1), ('Pham Thanh Ha',2), ('Vu Thi Thi', 3)

SELECT * FROM Student
SELECT * FROM Class

BEGIN TRANSACTION
    PRINT N'ah xoá được rồi nè'
    DELETE FROM Class WHERE idClass = 4
    ROLLBACK -- Quay về định dạng cũ trước khi chạy câu lệnh

BEGIN TRANSACTION
    PRINT N'ah xoá được rồi nè'
    DELETE FROM Class WHERE idClass = 4
    COMMIT -- Chấp nhận dữ liệu bị thay đổi

-- TRY CATCH: Bắt các lỗi để không khiến chương trình dừng lại
/*
Thử xoá 1 bản ghi lớp:
    + Nếu lỗi thì quay về
    + Nếu thành công thì xoá nó đi
*/
BEGIN TRANSACTION 
BEGIN TRY -- bắt buộc có begin
    DELETE FROM Class WHERE idClass = 1
    PRINT N'Xoá rồi nè'
    COMMIT
END TRY -- bắt buộc có end
BEGIN CATCH
    PRINT N'Không xoá được đâu lew lew'
    ROLLBACK
END CATCH 





Indexes:
	+ Clustered: thứ tự tăng dần 
	+ Non-Clustered: không theo thứ tự
	Khi không nên sử dụng index:
	+ Insert, Update, Delete chậm đi
	+ Tốn dung lượng lưu trữ

-- Sử dụng DB
USE BKD08K11

INSERT INTO Student values(N'Nguyễn Thị Thanh Lam', 'BKD04K11', 0, '2001-08-21', '0123465789'),
(N'Phạm Thanh Hà', 'BKD07K11', 0, '2001-08-21', '0123645789'),
(N'Quynhkhongdien', 'BKD08K11', 1, '2001-08-21', '0123335789'),
(N'Nguyễn Văn Luân', 'BKD08K11', 1, '2001-08-21', '0124445789')

SELECT * FROM Student WHERE nameStudent LIKE 'quynhkhongdien%'

-- Cú pháp tạo index clustered
CREATE CLUSTERED INDEX searchIdStudent ON Student(idStudent)

-- Cú pháp tạo index non-clustered
CREATE NONCLUSTERED INDEX searchNameIdStudent ON Student(nameStudent ASC, idStudent)

/*
ASC: sắp xếp tăng dần
DESC: sắp xếp giảm dần
*/







Function:
		+ Bảo mật dữ liệu
		+ Che đi câu query
		+ Cú pháp ngắn gọn
		+ Giúp máy chạy nhanh hơn
		+ Có trả về
		+ Sử dụng trong select
	=> GETDATE(), SUM()
	Kiểu function:
		+ Của chương trình tạo ra (System Define)
		+ Do mình tự tạo ra (User Define)
	Giá trị trả về:
		+ Có trả về

USE BKD08K11

-- Tạo function tính tổng 2 số => Return về kiểu int, float, varchar,...
CREATE FUNCTION TONG(@a INT, @b INT) 
RETURNS INT
AS
BEGIN
	RETURN @a + @b
END

SELECT dbo.TONG(4,5) AS Tong2So

SELECT * FROM Student WHERE idStudent=1
-- Tạo function return về bảng
-- Tạo function return 1 bản ghi khi truyền vào mã sinh viên
CREATE FUNCTION GetById(@id INT)
RETURNS TABLE
AS
RETURN SELECT * FROM Student WHERE idStudent=@id

SELECT * FROM dbo.GetById(4)

SELECT * FROM Class

-- TẠO RA DỮ LIỆU RANDOM
DECLARE @count INT
SET @count = 1
WHILE (@count<9)
BEGIN
	INSERT INTO Class VALUES ('BKD' + CAST(@count as VARCHAR(20)) + 'K11')
	SET @count = @count + 1
END

/*
CAST(value AS VARCHAR(20))
*/







CONSTRAINT:

- Quản lý sinh viên
BKD08K11
Student (
	idStudent int IDENTITY,
	nameStudent nvarchar(30),
	class char(8),
	gender bit,
	dateBirth date,
	phone char(10)
)
CONSTRAINT:
- LEN(): đếm độ dài ký tự
*/
CREATE DATABASE BKD08K11
USE BKD08K11

/*Tạo bảng*/
CREATE TABLE Student (
	idStudent int PRIMARY KEY IDENTITY,
	nameStudent nvarchar(30),
	class char(8) NOT NULL,
	gender bit, 
	dateBirth date,
	phone char(10) UNIQUE,
	CONSTRAINT phoneCheck CHECK (LEN(phone) = 10),
	CONSTRAINT nameStudentCheck CHECK (LEN(nameStudent) >= 1),
	CONSTRAINT dateBirthCheck CHECK (YEAR(dateBirth) >= 2000)
)

/*Thêm vào csdl*/
INSERT INTO Student(nameStudent,class,gender,dateBirth,phone) values(N'Nguyễn Thị Thùy', 'BKD08K11', 5, '2001-08-23', '0123456789')
INSERT INTO Student(nameStudent,class,gender,dateBirth,phone) values(N'Ý','BKD08K11', 1, '1999-08-23','9182763532')

/*Hiển thị tất cả bản ghi*/
SELECT * FROM Student

/*Xóa bảng*/
DROP TABLE Student

/*
DATE:
- YEAR(): Lấy năm
- GETDATE(): Lấy ngày hiện tại
*/

/*
Subject:
+ idSubject
+ title 
+ duration: thời lượng theo giờ
+ startDate: ngày bắt đầu môn

Constraint:
+ Title: at least 2 characters
+ duration: >= 20 and <= 72
+ startDate: after current date
*/

CREATE TABLE Subject(
	idSubject int PRIMARY KEY,
	title varchar(30),
	duration int DEFAULT 20,
	startDate date,
	CONSTRAINT titleCheck CHECK (LEN(title)>=2),
	CONSTRAINT durationCheck CHECK (duration>=20 and duration<=72),
	CONSTRAINT startDateCheck CHECK (startDate > GETDATE())
)
/*Sửa bảng*/
ALTER TABLE Subject 
ADD CONSTRAINT durationDefault 
DEFAULT 20 FOR duration

/*1.*/
ALTER TABLE Subject
ADD CONSTRAINT titleCheck
CHECK (LEN(title)>=2)

/*Xóa CONSTRAINT*/
ALTER TABLE Subject 
DROP CONSTRAINT titleCheck


INSERT INTO Subject(idSubject,title,duration,startDate) VALUES (1, 'DB2',30,'2021-04-01')
INSERT INTO Subject(idSubject,title,startDate) VALUES (3, 'PJ2','2021-04-01')

SELECT * FROM Subject
DROP TABLE Subject





VIEW
Bảng ảo:
1. Tìm kiếm nhanh hơn
2. Câu query ngắn gọn hơn
3. Khi thêm dữ liệu thì tự động bảng ảo được cập nhật dữ liệu theo
*/
USE BKD08K11

CREATE TABLE Class(
	idClass INT PRIMARY KEY IDENTITY,
	nameClass char(8)
)

CREATE TABLE Student(
	idStudent INT PRIMARY KEY IDENTITY,
	nameStudent varchar(20),
	idClass INT FOREIGN KEY REFERENCES Class(idClass)
)

INSERT INTO Class VALUES ('BKD04K11'), ('BKD07K11'), ('BKD08K11')
INSERT INTO Student VALUES ('Nguyen Thi Thanh Lam', 1), ('Pham Thanh Ha',2), ('Vu Thi Thi', 3)
INSERT INTO Student VALUES ('Nguyen Van Thi', 3)
INSERT INTO Student VALUES ('Vo Thi Thi', 3)
/*Lấy hết sinh viên bao gồm cả tên lớp*/
SELECT * FROM Student INNER JOIN Class ON Student.idClass = Class.idClass
/*Lấy id sinh viên, name sinh viên, id lớp, tên lớp*/
SELECT idStudent, nameStudent, Class.idClass, nameClass FROM Student 
INNER JOIN Class ON Student.idClass = Class.idClass

/*Tạo ra 1 bảng mới*/
SELECT idStudent, nameStudent, Class.idClass, nameClass INTO Student_Class FROM Student 
INNER JOIN Class ON Student.idClass = Class.idClass


/*Tạo ra 1 bảng ảo*/
CREATE VIEW Student_Class
AS
SELECT idStudent, nameStudent, Class.idClass, nameClass FROM Student 
INNER JOIN Class ON Student.idClass = Class.idClass

SELECT * FROM Student_Class


